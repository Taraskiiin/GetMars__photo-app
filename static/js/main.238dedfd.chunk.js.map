{"version":3,"sources":["components/RoverDropdown/RoverDropdown.js","components/CameraDropdown/CameraDropdown.js","components/SolNumber/SolNumber.js","components/PhotoBlock/PhotoBlock.js","App.js","index.js"],"names":["RoverDropdown","setRover","FormControl","InputLabel","Select","onChange","e","target","value","MenuItem","CameraDropdown","setCamera","camerasList","map","camera","name","fullname","id","SolNumber","setSol","TextField","label","type","InputProps","inputProps","min","max","PhotoBlock","rover","sol","useRef","useState","listPhotos","setListPhotos","useEffect","axios","get","then","data","className","onClick","console","log","App","readyToGet","setReadyToGet","push","Container","maxWidth","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.238dedfd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Select, MenuItem, FormControl, InputLabel } from \"@material-ui/core\";\r\n\r\nexport default function RoverDropdown({ setRover }) {\r\n  const handleChange = (e) => setRover(e.target.value);\r\n  return (\r\n    <FormControl>\r\n      <InputLabel>Select one of options</InputLabel>\r\n      <Select onChange={handleChange}>\r\n        <MenuItem value={\"curiosity\"}>Curiosity</MenuItem>\r\n        <MenuItem value={\"opportunity\"}>Opportunity</MenuItem>\r\n        <MenuItem value={\"spirit\"}>Spirit</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Select, FormControl, MenuItem, InputLabel } from \"@material-ui/core\";\r\n\r\nexport default function CameraDropdown({ setCamera, camerasList }) {\r\n  const handleChange = (e) => setCamera(e.target.value);\r\n  return (\r\n    <FormControl>\r\n      <InputLabel>Select one of options</InputLabel>\r\n      <Select onChange={handleChange}>\r\n        {camerasList.map((camera) => (\r\n           <MenuItem key={camera.id} value={camera.name}>{camera.fullname}</MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport default function SolNumber({ setSol }) {\r\n  const getData = (e) => setSol(e.target.value);\r\n  return (\r\n    <TextField\r\n      id=\"standard-basic\"\r\n      label=\"Enter sol\"\r\n      type=\"number\"\r\n      InputProps={{ inputProps: { min: 1, max: 1000 }}}\r\n      min={1}\r\n      max={1000}\r\n      onChange={getData}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default function PhotoBlock({ rover, camera, sol }) {\r\n    const id = useRef();\r\n  const [listPhotos, setListPhotos] = useState(null);\r\n  const [photo, setPhoto] = useState('');\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.nasa.gov/mars-photos/api/v1/rovers/${rover}/photos?sol=${sol}&camera=${camera}&api_key=DEMO_KEY`\r\n      )\r\n      .then(({ data }) => {\r\n        setListPhotos(data);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <button className=\"get__btn\" onClick={() => console.log(listPhotos, rover, camera, sol)}>\r\n        Send nudes\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Container from \"@material-ui/core/Container\";\n\nimport RoverDropdown from \"./components/RoverDropdown/RoverDropdown\";\nimport CameraDropdown from \"./components/CameraDropdown/CameraDropdown\";\nimport SolNumber from \"./components/SolNumber/SolNumber\";\nimport PhotoBlock from \"./components/PhotoBlock/PhotoBlock\";\n\nconst App = () => {\n  const [listPhotos, setListPhotos] = useState(null);\n  const [rover, setRover] = useState(\"\");\n  const [camera, setCamera] = useState(\"\");\n  const [sol, setSol] = useState(\"\");\n  const [readyToGet, setReadyToGet] = useState(false);\n  let camerasList = [];\n\n  if (rover === \"curiosity\") {\n    camerasList = [];\n    camerasList.push(\n      {\n        id: 1,\n        name: \"fhaz\",\n        fullname: \"Front Hazard Avoidance Camera\",\n      },\n      {\n        id: 2,\n        name: \"rhaz\",\n        fullname: \"Rear Hazard Avoidance Camera\",\n      },\n      {\n        id: 3,\n        name: \"mast\",\n        fullname: \"Mast Camera\",\n      },\n      {\n        id: 4,\n        name: \"chemcam\",\n        fullname: \"Chemistry and Camera Complex\",\n      },\n      {\n        id: 5,\n        name: \"mahli\",\n        fullname: \"Mars Hand Lens Imager\",\n      },\n      {\n        id: 6,\n        name: \"mardi\",\n        fullname: \"Mars Descent Imager\",\n      },\n      {\n        id: 7,\n        name: \"navcam\",\n        fullname: \"Navigation Camera\",\n      }\n    );\n  } else {\n    camerasList = [];\n    camerasList.push(\n      {\n        id: 1,\n        name: \"fhaz\",\n        fullname: \"Front Hazard Avoidance Camera\",\n      },\n      {\n        id: 2,\n        name: \"rhaz\",\n        fullname: \"Rear Hazard Avoidance Camera\",\n      },\n      {\n        id: 3,\n        name: \"navcam\",\n        fullname: \"Navigation Camera\",\n      },\n      {\n        id: 4,\n        name: \"pancam\",\n        fullname: \"Panoramic Camera\",\n      },\n      {\n        id: 5,\n        name: \"minites\",\n        fullname: \"Miniature Thermal\",\n      }\n    );\n  }\n\n  if (sol < 1) {\n    setSol(1);\n  } else if (sol > 1000) {\n    setSol(1000);\n  }\n\n  const checkToReady = () => {\n    if (rover !== \"\" && camera !== \"\" && sol !== \"\") {\n      setReadyToGet(true);\n    } else {\n      alert(\"fields must be filled!\");\n    }\n  };\n  return (\n    <div className=\"App\">\n      <Container maxWidth=\"sm\">\n        {readyToGet ? (\n          <PhotoBlock rover={rover} camera={camera} sol={sol} />\n        ) : (\n          <div className=\"form__block\">\n            <h1 className=\"app__title\">MARS ROVER PHOTOS</h1>\n            <RoverDropdown rover={rover} setRover={setRover} />\n            <CameraDropdown setCamera={setCamera} camerasList={camerasList} />\n            <SolNumber setSol={setSol} />\n            <button className=\"get__btn\" onClick={() => checkToReady()}>\n              Get photos\n            </button>\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}